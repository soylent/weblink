#!/usr/bin/env -S ruby -w
# frozen_string_literal: true

$LOAD_PATH.unshift File.expand_path('../lib', __dir__)

require 'optparse'
require 'uri'
require 'weblink'

opts = {}

op = OptionParser.new do |op|
  op.summary_width = 24

  op.banner =
    "Usage: weblink [options]\n" \
    'Web browser gateway'

  op.separator ''
  op.separator 'Options'

  op.on('-c', '--client', 'Starts weblink client (default)') do
    opts[:client] = true
  end

  op.on('-s', '--server', 'Starts weblink server') do
    opts[:server] = true
  end

  op.on('-a', '--host HOST', String, 'Address to bind to (default: 0.0.0.0)') do |host|
    opts[:host] = host
  end

  op.on('-p', '--port PORT', Integer, 'Use PORT (default: 8000)') do |port|
    opts[:port] = port
  end

  op.on('--proxy-host HOST', String, 'Address to bind proxy to(default: 0.0.0.0)') do |host|
    opts[:proxy_host] = host
  end

  op.on('--proxy-port PORT', Integer, 'Use proxy PORT (default: 1080)') do |port|
    opts[:proxy_port] = port
  end

  op.on('-v', '--version', 'Show version and exit') do
    version = File.expand_path('../VERSION', __dir__)
    puts(File.read(version))
    exit
  end

  op.on_tail('-h', '--help', 'Print this help') do
    puts(op)
    exit
  end
end

begin
  op.parse!
rescue OptionParser::ParseError => e
  op.abort(e)
else
  opts[:client] = true unless opts[:client] || opts[:server]
  if opts[:client] && (opts[:host] || opts[:port])
    abort('Changing host or port is not supported yet in client mode')
  end
  opts[:host] ||= '0.0.0.0'
  opts[:port] ||= 8000
  opts[:proxy_host] ||= '0.0.0.0'
  opts[:proxy_port] ||= 1080
end

weblink = Weblink.new(opts)
weblink.start

# vim: ft=ruby
